# helix-ide configuration
# VS Code-style tabbed bottom pane for Helix IDE

[general]
# Height of bottom pane as percentage
bottom_pane_height = 30

# Terminal action - opens a shell in a new tab
[actions.terminal]
tab_name = "terminal"
description = "Open a new terminal tab"
command = "$SHELL"

# Lazygit - git TUI
[actions.lazygit]
tab_name = "lazygit"
description = "Open lazygit for git operations"
command = "lazygit"

# Scooter - find and replace tool
[actions.scooter]
tab_name = "scooter"
description = "Find and replace with scooter"
command = "scooter"

# File explorer with yazi
[actions.explorer]
tab_name = "yazi"
description = "Open file explorer with yazi"
command = "yazi"

# Git blame
[actions.blame]
tab_name = "blame"
description = "Show git blame for current file and line"
command_template = "tig blame {{buffer_name}} +{{cursor_line}}"

# Database query tool
[actions.query]
tab_name = "sql"
description = "Open database query tool"
command = "lazysql"

# HTTP client
[actions.slumber]
tab_name = "http"
description = "Open HTTP client"
command = "slumber"

# SSH manager
[actions.ssh]
tab_name = "ssh"
description = "SSH connection manager"
command = "lazyssh"

# AI Coding Assistants

# Gemini CLI
[actions.gemini]
tab_name = "gemini"
description = "Google Gemini AI coding assistant"
command = "gemini"

# Claude CLI (Anthropic)
[actions.claude]
tab_name = "claude"
description = "Claude AI coding assistant"
command = "claude"

# Claude Code Router - manages multiple Claude instances
[actions.claude-router]
tab_name = "router"
description = "Claude Code Router - route requests to multiple Claude instances"
command = "claude-code-router"

# Run current file (extension-based)
[actions.run]
tab_name = "run"
description = "Run the current file"

[actions.run.extensions]
go = "go run {{basedir}}/*.go"
rs = "cargo run"
py = "python {{buffer_name}}"
js = "node {{buffer_name}}"
ts = "deno run {{buffer_name}}"
md = "glow -p {{buffer_name}}"
java = "java {{buffer_name}}"
dart = "dart run {{buffer_name}}"

# Test current file (extension-based)
[actions.test]
tab_name = "test"
description = "Run tests for the current file"

[actions.test.extensions]
go = "go test -v ./{{basedir}}/..."
rs = "cargo test"
py = "pytest {{buffer_name}}"
js = "npm test"
ts = "deno test {{buffer_name}}"
dart = "dart test {{buffer_name}}"

# Lint current file (extension-based)
[actions.lint]
tab_name = "lint"
description = "Lint the current file"

[actions.lint.extensions]
go = "golangci-lint run -v {{buffer_name}}"
rs = "cargo clippy"
py = "ruff check {{buffer_name}}"
js = "eslint {{buffer_name}}"
ts = "deno lint {{buffer_name}}"
dart = "dart analyze {{buffer_name}}"

# Check/build current project
[actions.check]
tab_name = "check"
description = "Check or build the current project"

[actions.check.extensions]
go = "go build ./{{basedir}}/..."
rs = "cargo check"
py = "mypy {{buffer_name}}"
js = "npm run build"
ts = "deno check {{buffer_name}}"
dart = "dart analyze"

# Format current file
[actions.format]
tab_name = "format"
description = "Format the current file"

[actions.format.extensions]
go = "gofmt -w {{buffer_name}}"
rs = "cargo fmt"
py = "black {{buffer_name}}"
js = "prettier --write {{buffer_name}}"
ts = "deno fmt {{buffer_name}}"
dart = "dart format {{buffer_name}}"

# Present markdown files
[actions.present]
tab_name = "present"
description = "Present markdown file"

[actions.present.extensions]
md = "presenterm --theme terminal-dark {{buffer_name}}"
